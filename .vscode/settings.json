{
  "workbench.colorTheme": "Solarized Light",
  "windsurf.autocompleteSpeed": "default",
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "files.autoSave": "afterDelay",
  "editor.formatOnSave": true,
  "explorer.confirmDelete": false,
  "workbench.iconTheme": "material-icon-theme",
  "editor.tabSize": 2,
  "git.enableSmartCommit": true,
  "editor.guides.indentation": false,
  "indentRainbow.indicatorStyle": "classic",
  "indentRainbow.colors": [
    "rgba(255,255,64, 0.07)",
    "rgba(127,255,127,0.07)",
    "rgba(255,127,255,0.07)",
    "rgba(79, 236,236,0.07)"
  ],
  "editor.guides.bracketPairs": "active",
  "editor.wordWrap": "on",
  "material-icon-theme.activeIconPack": "react",
  "material-icon-theme.folders.associations": {
    "vo": "Enum",
    "dto": "Enum",
    "store": "Store"
  },
  "material-icon-theme.hidesExplorerArrows": true,
  "hungryDelete.languageConfigurations": [
    {
      "languageId": "html",
      "indentationRules": {
        "increaseIndentPattern": "<(?!\\?|(?:area|base|br|col|frame|hr|html|img|input|link|meta|param)\\b|[^>]*\\/>)([-_\\.A-Za-z0-9]+)(?=\\s|>)\\b[^>]*>(?!.*<\\/\\1>)|<!--(?!.*-->)|\\{[^}\"']*$",
        "decreaseIndentPattern": "^\\s*(<\\/(?!html)[-_\\.A-Za-z0-9]+\\b[^>]*>|-->|\\})"
      }
    },
    {
      "languageId": "go",
      "indentationRules": {
        "increaseIndentPattern": "^.*(\\bcase\\b.*:|\\bdefault\\b:|(\\b(func|if|else|switch|select|for|struct)\\b.*)?{[^}\"'`]*|\\([^)\"'`]*)$",
        "decreaseIndentPattern": "^\\s*(\\bcase\\b.*:|\\bdefault\\b:|}[)}]*[),]?|\\)[,]?)$"
      }
    },
    {
      "languageId": "json",
      "indentationRules": {
        "increaseIndentPattern": "^.*(\\{[^}]*|\\[[^\\]]*)$",
        "decreaseIndentPattern": "^\\s*[}\\]],?\\s*$"
      }
    },
    {
      "languageId": "less",
      "indentationRules": {
        "increaseIndentPattern": "(^.*\\{[^}]*$)",
        "decreaseIndentPattern": "^\\s*\\}"
      }
    },
    {
      "languageId": "lua",
      "indentationRules": {
        "increaseIndentPattern": "^((?!(\\-\\-)).)*((\\b(else|function|then|do|repeat)\\b((?!\\b(end|until)\\b).)*)|(\\{\\s*))$",
        "decreaseIndentPattern": "^\\s*((\\b(elseif|else|end|until)\\b)|(\\})|(\\)))"
      }
    },
    {
      "languageId": "php",
      "indentationRules": {
        "increaseIndentPattern": "({(?!.+}).*|\\(|\\[|((else(\\s)?)?if|else|for(each)?|while|switch).*:)\\s*(/[/*].*)?$",
        "decreaseIndentPattern": "^(.*\\*\\/)?\\s*((\\})|(\\)+[;,])|(\\][;,])|\\b(else:)|\\b((end(if|for(each)?|while|switch));))"
      }
    },
    {
      "languageId": "ruby",
      "indentationRules": {
        "increaseIndentPattern": "^\\s*((begin|class|(private|protected)\\s+def|def|else|elsif|ensure|for|if|module|rescue|unless|until|when|while|case)|([^#]*\\sdo\\b)|([^#]*=\\s*(case|if|unless)))\\b([^#\\{;]|(\"|'|\/).*\\4)*(#.*)?$",
        "decreaseIndentPattern": "^\\s*([}\\]]([,)]?\\s*(#|$)|\\.[a-zA-Z_]\\w*\\b)|(end|rescue|ensure|else|elsif|when)\\b)"
      }
    },
    {
      "languageId": "typescript",
      "indentationRules": {
        "increaseIndentPattern": "^((?!.*?\\/\\*).*\\*\\/)?\\s*[\\}\\]].*$",
        "decreaseIndentPattern": "^((?!\\/\\/).)*(\\{[^}\"'`]*|\\([^)\"'`]*|\\[[^\\]\"'`]*)$"
      }
    },
    {
      "languageId": "yaml",
      "indentationRules": {
        "increaseIndentPattern": "^\\s*.*(:|-) ?(&amp;\\w+)?(\\{[^}\"']*|\\([^)\"']*)?$",
        "decreaseIndentPattern": "^\\s+\\}$"
      }
    }
  ],
  "hungryDelete.keepOneSpace": true,
  "hungryDelete.keepOneSpaceException": ">;"
}
